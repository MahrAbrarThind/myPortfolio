{"ast":null,"code":"var _jsxFileName = \"D:\\\\abrar\\\\New folder\\\\New folder\\\\web development\\\\Complete Mern Development\\\\myportfolio\\\\src\\\\Components\\\\Projects.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  const projects = [{\n    title: 'RideReserve',\n    side: 'left',\n    img: 'eduspark.png',\n    description: \" add li's for better looooooook        React Js I Will Maintain Existing React Systems, Including Fixing Bugs, Design And Develop New Custom Components To Meet Project Requirements,Install And Configure Server Environments For React Deployments.\",\n    date: \"12 july 2023\"\n  }, {\n    title: 'Edu Spark',\n    side: 'right',\n    img: 'eduspark.png',\n    description: \"React Js I Will Maintain Existing React Systems, Including Fixing Bugs, Design And Develop New Custom Components To Meet Project Requirements,Install And Configure Server Environments For React Deployments.\",\n    date: \"12 july 2023\"\n  }, {\n    title: 'PenPulse',\n    side: 'left',\n    img: 'eduspark.png',\n    description: \"React Js I Will Maintain Existing React Systems, Including Fixing Bugs, Design And Develop New Custom Components To Meet Project Requirements,Install And Configure Server Environments For React Deployments.\",\n    date: \"12 july 2023\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline-container\",\n    children: [projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `timeline-card ${project.side}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-front\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: project.img,\n            alt: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-back\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: project.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Projects","projects","title","side","img","description","date","className","children","map","project","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/abrar/New folder/New folder/web development/Complete Mern Development/myportfolio/src/Components/Projects.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst Projects = () => {\r\n  const projects = [\r\n    {\r\n      title: 'RideReserve',\r\n      side: 'left',\r\n      img: 'eduspark.png',\r\n      description: \" add li's for better looooooook        React Js I Will Maintain Existing React Systems, Including Fixing Bugs, Design And Develop New Custom Components To Meet Project Requirements,Install And Configure Server Environments For React Deployments.\",\r\n      date: \"12 july 2023\"\r\n    },\r\n    {\r\n      title: 'Edu Spark',\r\n      side: 'right',\r\n      img: 'eduspark.png',\r\n      description: \"React Js I Will Maintain Existing React Systems, Including Fixing Bugs, Design And Develop New Custom Components To Meet Project Requirements,Install And Configure Server Environments For React Deployments.\",\r\n      date: \"12 july 2023\"\r\n    },\r\n    {\r\n      title: 'PenPulse',\r\n      side: 'left',\r\n      img: 'eduspark.png',\r\n      description: \"React Js I Will Maintain Existing React Systems, Including Fixing Bugs, Design And Develop New Custom Components To Meet Project Requirements,Install And Configure Server Environments For React Deployments.\",\r\n      date: \"12 july 2023\"\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"timeline-container\">\r\n      {projects.map((project, index) => (\r\n        <div key={index} className={`timeline-card ${project.side}`}>\r\n          <div className=\"timeline-content\">\r\n            <div className=\"card-front\">\r\n              <img src={project.img} alt={project.title} />\r\n              <h3>{project.title}</h3>\r\n            </div>\r\n            <div className=\"card-back\">\r\n              <p>{project.description}</p>\r\n              <span>{project.date}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"timeline-line\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,QAAQ,GAAG,CACf;IACEC,KAAK,EAAE,aAAa;IACpBC,IAAI,EAAE,MAAM;IACZC,GAAG,EAAE,cAAc;IACnBC,WAAW,EAAE,uPAAuP;IACpQC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,KAAK,EAAE,WAAW;IAClBC,IAAI,EAAE,OAAO;IACbC,GAAG,EAAE,cAAc;IACnBC,WAAW,EAAE,gNAAgN;IAC7NC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,KAAK,EAAE,UAAU;IACjBC,IAAI,EAAE,MAAM;IACZC,GAAG,EAAE,cAAc;IACnBC,WAAW,EAAE,gNAAgN;IAC7NC,IAAI,EAAE;EACR,CAAC,CACF;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,oBAAoB;IAAAC,QAAA,GAChCP,QAAQ,CAACQ,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BZ,OAAA;MAAiBQ,SAAS,EAAE,iBAAiBG,OAAO,CAACP,IAAI,EAAG;MAAAK,QAAA,eAC1DT,OAAA;QAAKQ,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BT,OAAA;UAAKQ,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBT,OAAA;YAAKa,GAAG,EAAEF,OAAO,CAACN,GAAI;YAACS,GAAG,EAAEH,OAAO,CAACR;UAAM;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7ClB,OAAA;YAAAS,QAAA,EAAKE,OAAO,CAACR;UAAK;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,eACNlB,OAAA;UAAKQ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBT,OAAA;YAAAS,QAAA,EAAIE,OAAO,CAACL;UAAW;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5BlB,OAAA;YAAAS,QAAA,EAAOE,OAAO,CAACJ;UAAI;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,GAVEN,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWV,CACN,CAAC,eACFlB,OAAA;MAAKQ,SAAS,EAAC;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAACC,EAAA,GA5CIlB,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}