{"ast":null,"code":"var _jsxFileName = \"D:\\\\abrar\\\\New folder\\\\New folder\\\\web development\\\\Complete Mern Development\\\\myportfolio\\\\src\\\\Components\\\\Typewriter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Typewriter = ({\n  words\n}) => {\n  _s();\n  const [index, setIndex] = useState(0);\n  const [subIndex, setSubIndex] = useState(0);\n  const [blink, setBlink] = useState(true);\n  const [reverse, setReverse] = useState(false);\n\n  // typewriter speed\n  useEffect(() => {\n    if (index === words.length) return;\n    if (subIndex === words[index].length + 1 && !reverse) {\n      setTimeout(() => setReverse(true), 500);\n      return;\n    }\n    if (subIndex === 0 && reverse) {\n      setReverse(false);\n      setIndex(prev => (prev + 1) % words.length);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      setSubIndex(prev => prev + (reverse ? -1 : 1));\n    }, 80);\n    return () => clearTimeout(timeout);\n  }, [subIndex, index, reverse, words]);\n\n  // blinker cursor\n  useEffect(() => {\n    const timeout2 = setTimeout(() => {\n      setBlink(prev => !prev);\n    }, 500);\n    return () => clearTimeout(timeout2);\n  }, [blink]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [`${words[0].includes('Hello')}`, \"? (\", /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"hello\",\n      children: ` ${words[index].substring(0, subIndex)}${blink ? ' ' : ' '}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), \"):( )\", /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"hello\",\n      children: ` ${words[index].substring(0, subIndex)}${blink ? ' ' : ' '}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Typewriter, \"pleVZOqAINqo9ZUREidTLgR+xD4=\");\n_c = Typewriter;\nexport default Typewriter;\nvar _c;\n$RefreshReg$(_c, \"Typewriter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Typewriter","words","_s","index","setIndex","subIndex","setSubIndex","blink","setBlink","reverse","setReverse","length","setTimeout","prev","timeout","clearTimeout","timeout2","children","includes","className","substring","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/abrar/New folder/New folder/web development/Complete Mern Development/myportfolio/src/Components/Typewriter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Typewriter = ({ words }) => {\r\n  const [index, setIndex] = useState(0);\r\n  const [subIndex, setSubIndex] = useState(0);\r\n  const [blink, setBlink] = useState(true);\r\n  const [reverse, setReverse] = useState(false);\r\n\r\n  // typewriter speed\r\n  useEffect(() => {\r\n    if (index === words.length) return;\r\n\r\n    if (subIndex === words[index].length + 1 && !reverse) {\r\n      setTimeout(() => setReverse(true), 500);\r\n      return;\r\n    }\r\n\r\n    if (subIndex === 0 && reverse) {\r\n      setReverse(false);\r\n      setIndex((prev) => (prev + 1) % words.length);\r\n      return;\r\n    }\r\n\r\n    const timeout = setTimeout(() => {\r\n      setSubIndex((prev) => prev + (reverse ? -1 : 1));\r\n    }, 80);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [subIndex, index, reverse, words]);\r\n\r\n  // blinker cursor\r\n  useEffect(() => {\r\n    const timeout2 = setTimeout(() => {\r\n      setBlink((prev) => !prev);\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timeout2);\r\n  }, [blink]);\r\n\r\n  return (\r\n    <>\r\n    {`${words[0].includes('Hello')}`}? (\r\n      <p className='hello'>\r\n      {` ${words[index].substring(0, subIndex)}${blink ? ' ' : ' '}`}      \r\n    </p>\r\n    ):(\r\n     \r\n    )\r\n\r\n\r\n    <p className='hello'>\r\n      {` ${words[index].substring(0, subIndex)}${blink ? ' ' : ' '}`}      \r\n    </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Typewriter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACAC,SAAS,CAAC,MAAM;IACd,IAAIQ,KAAK,KAAKF,KAAK,CAACU,MAAM,EAAE;IAE5B,IAAIN,QAAQ,KAAKJ,KAAK,CAACE,KAAK,CAAC,CAACQ,MAAM,GAAG,CAAC,IAAI,CAACF,OAAO,EAAE;MACpDG,UAAU,CAAC,MAAMF,UAAU,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;MACvC;IACF;IAEA,IAAIL,QAAQ,KAAK,CAAC,IAAII,OAAO,EAAE;MAC7BC,UAAU,CAAC,KAAK,CAAC;MACjBN,QAAQ,CAAES,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIZ,KAAK,CAACU,MAAM,CAAC;MAC7C;IACF;IAEA,MAAMG,OAAO,GAAGF,UAAU,CAAC,MAAM;MAC/BN,WAAW,CAAEO,IAAI,IAAKA,IAAI,IAAIJ,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMM,YAAY,CAACD,OAAO,CAAC;EACpC,CAAC,EAAE,CAACT,QAAQ,EAAEF,KAAK,EAAEM,OAAO,EAAER,KAAK,CAAC,CAAC;;EAErC;EACAN,SAAS,CAAC,MAAM;IACd,MAAMqB,QAAQ,GAAGJ,UAAU,CAAC,MAAM;MAChCJ,QAAQ,CAAEK,IAAI,IAAK,CAACA,IAAI,CAAC;IAC3B,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAME,YAAY,CAACC,QAAQ,CAAC;EACrC,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,oBACEV,OAAA,CAAAE,SAAA;IAAAkB,QAAA,GACC,GAAGhB,KAAK,CAAC,CAAC,CAAC,CAACiB,QAAQ,CAAC,OAAO,CAAC,EAAE,EAAC,KAC/B,eAAArB,OAAA;MAAGsB,SAAS,EAAC,OAAO;MAAAF,QAAA,EACnB,IAAIhB,KAAK,CAACE,KAAK,CAAC,CAACiB,SAAS,CAAC,CAAC,EAAEf,QAAQ,CAAC,GAAGE,KAAK,GAAG,GAAG,GAAG,GAAG;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,SAMJ,eAAA3B,OAAA;MAAGsB,SAAS,EAAC,OAAO;MAAAF,QAAA,EACjB,IAAIhB,KAAK,CAACE,KAAK,CAAC,CAACiB,SAAS,CAAC,CAAC,EAAEf,QAAQ,CAAC,GAAGE,KAAK,GAAG,GAAG,GAAG,GAAG;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACtB,EAAA,CArDIF,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAuDhB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}