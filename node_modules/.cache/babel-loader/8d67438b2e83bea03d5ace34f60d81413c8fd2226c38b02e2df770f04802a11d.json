{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nconst UseIntersectionObserver = options => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry], observer) => {\n      if (entry.isIntersecting) {\n        setIsVisible(true);\n        observer.unobserve(entry.target);\n      }\n    }, options);\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n    return () => {\n      if (ref.current) {\n        observer.unobserve(ref.current);\n      }\n    };\n  }, [ref, options]);\n  return [ref, isVisible];\n};\n_s(UseIntersectionObserver, \"7N8EcRPlcY6o9kzg5IgMZgWhyLI=\");\n_c = UseIntersectionObserver;\nexport default UseIntersectionObserver;\nvar _c;\n$RefreshReg$(_c, \"UseIntersectionObserver\");","map":{"version":3,"names":["useEffect","useRef","useState","UseIntersectionObserver","options","_s","isVisible","setIsVisible","ref","observer","IntersectionObserver","entry","isIntersecting","unobserve","target","current","observe","_c","$RefreshReg$"],"sources":["D:/abrar/New folder/New folder/web development/Complete Mern Development/myportfolio/src/Components/UseIntersectionObserver.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\n\r\nconst UseIntersectionObserver = (options) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(([entry], observer) => {\r\n      if (entry.isIntersecting) {\r\n        setIsVisible(true);\r\n        observer.unobserve(entry.target);\r\n      }\r\n    }, options);\r\n\r\n    if (ref.current) {\r\n      observer.observe(ref.current);\r\n    }\r\n\r\n    return () => {\r\n      if (ref.current) {\r\n        observer.unobserve(ref.current);\r\n      }\r\n    };\r\n  }, [ref, options]);\r\n\r\n  return [ref, isVisible];\r\n};\r\n\r\nexport default UseIntersectionObserver;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,MAAMC,uBAAuB,GAAIC,OAAO,IAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMM,GAAG,GAAGP,MAAM,CAAC,CAAC;EAEpBD,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAG,IAAIC,oBAAoB,CAAC,CAAC,CAACC,KAAK,CAAC,EAAEF,QAAQ,KAAK;MAC/D,IAAIE,KAAK,CAACC,cAAc,EAAE;QACxBL,YAAY,CAAC,IAAI,CAAC;QAClBE,QAAQ,CAACI,SAAS,CAACF,KAAK,CAACG,MAAM,CAAC;MAClC;IACF,CAAC,EAAEV,OAAO,CAAC;IAEX,IAAII,GAAG,CAACO,OAAO,EAAE;MACfN,QAAQ,CAACO,OAAO,CAACR,GAAG,CAACO,OAAO,CAAC;IAC/B;IAEA,OAAO,MAAM;MACX,IAAIP,GAAG,CAACO,OAAO,EAAE;QACfN,QAAQ,CAACI,SAAS,CAACL,GAAG,CAACO,OAAO,CAAC;MACjC;IACF,CAAC;EACH,CAAC,EAAE,CAACP,GAAG,EAAEJ,OAAO,CAAC,CAAC;EAElB,OAAO,CAACI,GAAG,EAAEF,SAAS,CAAC;AACzB,CAAC;AAACD,EAAA,CAxBIF,uBAAuB;AAAAc,EAAA,GAAvBd,uBAAuB;AA0B7B,eAAeA,uBAAuB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}